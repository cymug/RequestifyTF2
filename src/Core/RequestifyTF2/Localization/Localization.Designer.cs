//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RequestifyTF2.Localization {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Localization {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Localization() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("RequestifyTF2.Localization.Localization", typeof(Localization).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Cannot find usable device. Make sure that you have VB-Audio or Virtual Audio Cable installed and enabled in device manager!.
        /// </summary>
        internal static string CORE_CANNOT_FIND_DEVICES {
            get {
                return ResourceManager.GetString("CORE_CANNOT_FIND_DEVICES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Cant load plugin: .
        /// </summary>
        internal static string CORE_CANT_LOAD_PLUGIN {
            get {
                return ResourceManager.GetString("CORE_CANT_LOAD_PLUGIN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Can&apos;t find directory .
        /// </summary>
        internal static string CORE_ERROR_CANT_FIND_DIR {
            get {
                return ResourceManager.GetString("CORE_ERROR_CANT_FIND_DIR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Can&apos;t remove lines from console.log. The game is probably running. Please close the game before starting this program.
        /// </summary>
        internal static string CORE_ERROR_CANT_PREPARE_CONSOLE_LOG {
            get {
                return ResourceManager.GetString("CORE_ERROR_CANT_PREPARE_CONSOLE_LOG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error while setting {0} as default input device
        ///{1}.
        /// </summary>
        internal static string CORE_ERROR_WHILE_SETTING_INPUT {
            get {
                return ResourceManager.GetString("CORE_ERROR_WHILE_SETTING_INPUT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Errors found. Please fix errors before using this program..
        /// </summary>
        internal static string CORE_ERRORS_FOUND_CLOSE_PROGRAM {
            get {
                return ResourceManager.GetString("CORE_ERRORS_FOUND_CLOSE_PROGRAM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} executed {1}.
        /// </summary>
        internal static string CORE_EXECUTED_COMMAND {
            get {
                return ResourceManager.GetString("CORE_EXECUTED_COMMAND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Invalid plugin: .
        /// </summary>
        internal static string CORE_INVALID_PLUGIN {
            get {
                return ResourceManager.GetString("CORE_INVALID_PLUGIN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Invalid plugin: {0}
        /// Plugin has more than 1 interface.
        /// </summary>
        internal static string CORE_INVALID_PLUGIN_MORE_THAN_ONE_INTERFACE {
            get {
                return ResourceManager.GetString("CORE_INVALID_PLUGIN_MORE_THAN_ONE_INTERFACE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Invoked {0} OnLoad method! .
        /// </summary>
        internal static string CORE_INVOKED_ONLOAD_METHOD {
            get {
                return ResourceManager.GetString("CORE_INVOKED_ONLOAD_METHOD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Loaded {0}.
        /// </summary>
        internal static string CORE_LOADED_PLUGIN {
            get {
                return ResourceManager.GetString("CORE_LOADED_PLUGIN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Patching autoexec.cfg.
        /// </summary>
        internal static string CORE_PATCHING_AUTOEXEC {
            get {
                return ResourceManager.GetString("CORE_PATCHING_AUTOEXEC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Playing {0} from {1}.
        /// </summary>
        internal static string CORE_PLAYING_TITLE_FROM {
            get {
                return ResourceManager.GetString("CORE_PLAYING_TITLE_FROM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Loading {0} from {1}.
        /// </summary>
        internal static string CORE_PLUGIN_LOADING_FROM {
            get {
                return ResourceManager.GetString("CORE_PLUGIN_LOADING_FROM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Searching for usable devices....
        /// </summary>
        internal static string CORE_SEARCHING_FOR_DEVICES {
            get {
                return ResourceManager.GetString("CORE_SEARCHING_FOR_DEVICES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Please set game directory.
        /// </summary>
        internal static string CORE_SET_DIRECTORY {
            get {
                return ResourceManager.GetString("CORE_SET_DIRECTORY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Started LogReader Thread!.
        /// </summary>
        internal static string CORE_STARTED_LOGREADER_THREAD {
            get {
                return ResourceManager.GetString("CORE_STARTED_LOGREADER_THREAD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Started Player Thread!.
        /// </summary>
        internal static string CORE_STARTED_PLAYER_THREAD {
            get {
                return ResourceManager.GetString("CORE_STARTED_PLAYER_THREAD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Used {0} as output device and {1} as input device.
        /// </summary>
        internal static string CORE_USED_DEVICES {
            get {
                return ResourceManager.GetString("CORE_USED_DEVICES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} was blacklisted to execute {1}.
        /// </summary>
        internal static string CORE_USER_BLACKLISTED_FOR_EXECUTING {
            get {
                return ResourceManager.GetString("CORE_USER_BLACKLISTED_FOR_EXECUTING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} invoked {1}.
        /// </summary>
        internal static string CORE_USER_INVOKED {
            get {
                return ResourceManager.GetString("CORE_USER_INVOKED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Invoked {0} OnLoad method! .
        /// </summary>
        internal static string INVOKED_ONLOAD_METHOD {
            get {
                return ResourceManager.GetString("INVOKED_ONLOAD_METHOD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на *DEAD*.
        /// </summary>
        internal static string TF_CHAT_DEAD {
            get {
                return ResourceManager.GetString("TF_CHAT_DEAD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на (Spectator).
        /// </summary>
        internal static string TF_CHAT_SPECTATOR {
            get {
                return ResourceManager.GetString("TF_CHAT_SPECTATOR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на (TEAM).
        /// </summary>
        internal static string TF_CHAT_TEAM {
            get {
                return ResourceManager.GetString("TF_CHAT_TEAM", resourceCulture);
            }
        }
    }
}
